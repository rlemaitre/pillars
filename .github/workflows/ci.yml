# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['**', '!update/**', '!pr/**']
  push:
    branches: ['**', '!update/**', '!pr/**']
    tags: [v*]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


concurrency:
  group: ${{ github.workflow }} @ ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [3]
        java: [graalvm@21]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup sbt
        uses: sbt/setup-sbt@v1

      - name: Setup Java (graalvm@21)
        id: setup-java-graalvm-21
        if: matrix.java == 'graalvm@21'
        uses: actions/setup-java@v4
        with:
          distribution: graalvm
          java-version: 21
          cache: sbt

      - name: sbt update
        if: matrix.java == 'graalvm@21' && steps.setup-java-graalvm-21.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Check no unused dependency
        run: sbt unusedCompileDependenciesTest

      - name: Check that workflows are up to date
        run: sbt githubWorkflowCheck

      - name: Check headers and formatting
        if: matrix.java == 'graalvm@21' && matrix.os == 'ubuntu-latest'
        run: sbt '++ ${{ matrix.scala }}' headerCheckAll scalafmtCheckAll 'project /' scalafmtSbtCheck

      - name: Test
        run: sbt '++ ${{ matrix.scala }}' test

      - name: Check binary compatibility
        if: matrix.java == 'graalvm@21' && matrix.os == 'ubuntu-latest'
        run: sbt '++ ${{ matrix.scala }}' mimaReportBinaryIssues

      - name: Generate API documentation
        if: matrix.java == 'graalvm@21' && matrix.os == 'ubuntu-latest'
        run: sbt '++ ${{ matrix.scala }}' doc

      - name: Make target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
        run: mkdir -p modules/redis-rediculous/target modules/db-migration/target modules/example/target modules/flags/target modules/http-client/target modules/rabbitmq-fs2/target modules/db-skunk/target modules/db-doobie/target modules/docs/target modules/core/target project/target

      - name: Compress target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
        run: tar cf targets.tar modules/redis-rediculous/target modules/db-migration/target modules/example/target modules/flags/target modules/http-client/target modules/rabbitmq-fs2/target modules/db-skunk/target modules/db-doobie/target modules/docs/target modules/core/target project/target

      - name: Upload target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
        uses: actions/upload-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-${{ matrix.scala }}
          path: targets.tar

  publish:
    name: Publish Artifacts
    needs: [prepare-release]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
    strategy:
      matrix:
        os: [ubuntu-latest]
        java: [graalvm@21]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup sbt
        uses: sbt/setup-sbt@v1

      - name: Setup Java (graalvm@21)
        id: setup-java-graalvm-21
        if: matrix.java == 'graalvm@21'
        uses: actions/setup-java@v4
        with:
          distribution: graalvm
          java-version: 21
          cache: sbt

      - name: sbt update
        if: matrix.java == 'graalvm@21' && steps.setup-java-graalvm-21.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Download target directories (3)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java }}-3

      - name: Inflate target directories (3)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Import signing key
        if: env.PGP_SECRET != '' && env.PGP_PASSPHRASE == ''
        env:
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        run: echo $PGP_SECRET | base64 -d -i - | gpg --import

      - name: Import signing key and strip passphrase
        if: env.PGP_SECRET != '' && env.PGP_PASSPHRASE != ''
        env:
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        run: |
          echo "$PGP_SECRET" | base64 -d -i - > /tmp/signing-key.gpg
          echo "$PGP_PASSPHRASE" | gpg --pinentry-mode loopback --passphrase-fd 0 --import /tmp/signing-key.gpg
          (echo "$PGP_PASSPHRASE"; echo; echo) | gpg --command-fd 0 --pinentry-mode loopback --change-passphrase $(gpg --list-secret-keys --with-colons 2> /dev/null | grep '^sec:' | cut --delimiter ':' --fields 5 | tail -n 1)

      - name: Publish
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_CREDENTIAL_HOST: ${{ secrets.SONATYPE_CREDENTIAL_HOST }}
        run: sbt tlCiRelease

  dependency-submission:
    name: Submit Dependencies
    if: github.event.repository.fork == false && github.event_name != 'pull_request'
    strategy:
      matrix:
        os: [ubuntu-22.04]
        java: [graalvm@21]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup sbt
        uses: sbt/setup-sbt@v1

      - name: Setup Java (graalvm@21)
        id: setup-java-graalvm-21
        if: matrix.java == 'graalvm@21'
        uses: actions/setup-java@v4
        with:
          distribution: graalvm
          java-version: 21
          cache: sbt

      - name: sbt update
        if: matrix.java == 'graalvm@21' && steps.setup-java-graalvm-21.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Submit Dependencies
        uses: scalacenter/sbt-dependency-submission@v2
        with:
          configs-ignore: test scala-tool scala-doc-tool test-internal

  validate-steward:
    name: Validate Steward Config
    strategy:
      matrix:
        os: [ubuntu-22.04]
        java: [temurin@11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v4

      - name: Setup Java (temurin@11)
        id: setup-java-temurin-11
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 11

      - uses: coursier/setup-action@v1
        with:
          apps: scala-steward

      - run: scala-steward validate-repo-config .scala-steward.conf

  prepare-release:
    name: 👷 Prepare release
    needs: [build]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/heads/main'))
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13]
        java: [temurin@11]
    runs-on: ${{ matrix.os }}
    permissions:
      actions: write
      checks: write
      contents: write
      deployments: write
      id-token: none
      issues: write
      packages: write
      pages: write
      pull-requests: write
      repository-projects: write
      security-events: write
      statuses: write
    env:
      DTC_HEADLESS: true
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get previous tag
        id: previousTag
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          name=$(git --no-pager tag --sort=creatordate --merged ${{ github.ref_name }} | tail -2 | head -1)
          ref_name="${{ github.ref_name }}"
          prefix="prepare-"
          next_version=${ref_name/#$prefix}
          echo "previousTag=$name"
          echo "previousTag=$name" >> $GITHUB_ENV
          echo "nextTag=$next_version"
          echo "nextTag=$next_version" >> $GITHUB_ENV

      - name: Update CHANGELOG
        id: changelog
        if: startsWith(github.ref, 'refs/tags/v')
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          fromTag: ${{ github.ref_name }}
          toTag: ${{ env.previousTag }}
          writeToFile: true

      - name: Commit CHANGELOG.md
        if: startsWith(github.ref, 'refs/tags/v')
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'docs: update CHANGELOG.md for ${{ env.nextTag }} [skip ci]'
          branch: main
          file_pattern: CHANGELOG.md docToolchainConfig.groovy

      - name: Create version tag
        if: startsWith(github.ref, 'refs/tags/v')
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ github.ref_name }}
          message: Release ${{ github.ref_name }}
          force_push_tag: true

      - name: Create release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: ncipollo/release-action@v1.14.0
        with:
          body: ${{ steps.changelog.outputs.changes }}
          name: ${{ github.ref_name }}
          tag: ${{ github.ref_name }}
          draft: false
          makeLatest: true
          allowUpdates: true
          token: ${{ github.token }}

  website:
    name: 🌐 Publish website
    needs: [publish]
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13]
        java: [temurin@11]
    runs-on: ${{ matrix.os }}
    permissions:
      actions: write
      checks: write
      contents: write
      deployments: write
      id-token: none
      issues: write
      packages: write
      pages: write
      pull-requests: write
      repository-projects: write
      security-events: write
      statuses: write
    env:
      DTC_HEADLESS: true
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v4

      - name: Setup
        run: chmod +x dtcw

      - name: Setup Java (temurin@17)
        id: setup-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@17' && steps.setup-java-temurin-17.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Install docToolchain
        run: ./dtcw local install doctoolchain

      - name: Cache sbt
        uses: actions/cache@v4
        with:
          path: |
            .ivy2
            .sbt
          key: sbt-${{ hashFiles('build.sbt', 'plugins.sbt') }}
          restore-keys: pillars-cache-${{ hashFiles('build.sbt', 'plugins.sbt') }}

      - name: Get latest version
        id: version
        run: |
          PILLARS_VERSION="$(git ls-remote --tags $REPO | awk -F"/" '{print $3}' | grep '^v[0-9]*\.[0-9]*\.[0-9]*' | grep -v '\{\}' | sort --version-sort | tail -n1)"
          echo "latest version is [$PILLARS_VERSION]"
          echo "version=${PILLARS_VERSION#v}" >> "$GITHUB_OUTPUT"

      - name: Generate site
        env:
          PILLARS_VERSION: ${{ steps.version.outputs.version }}
          DTC_HEADLESS: true
        run: ./dtcw local generateSite && sbt unidoc

      - name: Copy to public
        run: cp -r target/microsite/output ./public

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ github.token }}
          publish_dir: ./public
          cname: pillars.dev
          enable_jekyll: false
